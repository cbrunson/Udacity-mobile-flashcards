{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RECEIVE_FLASHCARDS, RECEIVE_DECKS, ADD_FLASHCARD, ADD_DECK, DELETE_DECK } from \"../actions/decks\";\nexport function decks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_DECKS:\n      return _objectSpread(_objectSpread({}, state), action.decks);\n\n    case ADD_DECK:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.deck.id, action.deck));\n\n    case DELETE_DECK:\n      var copy = {};\n\n      _extends(copy, state);\n\n      delete copy[action.deckId];\n      return copy;\n\n    case RECEIVE_FLASHCARDS:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.deckId, _objectSpread(_objectSpread({}, state[action.deckId]), {}, {\n        flashcards: action.flashcards\n      })));\n\n    case ADD_FLASHCARD:\n      console.log('Adding flashcards to current state: ', state, 'with action: ', action);\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.deckId, _objectSpread(_objectSpread({}, state[action.deckId]), {}, {\n        flashcards: _objectSpread(_objectSpread({}, state[action.deckId].flashcards || {}), {}, _defineProperty({}, action.flashcard.id, action.flashcard))\n      })));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/reducers/decks.js"],"names":["RECEIVE_FLASHCARDS","RECEIVE_DECKS","ADD_FLASHCARD","ADD_DECK","DELETE_DECK","decks","state","action","type","deck","id","copy","deckId","flashcards","console","log","flashcard"],"mappings":";;;;;;;AAAA,SACEA,kBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,WALF;AASA,OAAO,SAASC,KAAT,GAAmC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,6CACKK,KADL,GAEKC,MAAM,CAACF,KAFZ;;AAIF,SAAKF,QAAL;AACE,6CACKG,KADL,2BAEGC,MAAM,CAACE,IAAP,CAAYC,EAFf,EAEoBH,MAAM,CAACE,IAF3B;;AAIF,SAAKL,WAAL;AACE,UAAMO,IAAI,GAAG,EAAb;;AACA,eAAcA,IAAd,EAAoBL,KAApB;;AACA,aAAOK,IAAI,CAACJ,MAAM,CAACK,MAAR,CAAX;AACA,aAAOD,IAAP;;AAEF,SAAKX,kBAAL;AACE,6CACKM,KADL,2BAEGC,MAAM,CAACK,MAFV,kCAGON,KAAK,CAACC,MAAM,CAACK,MAAR,CAHZ;AAIIC,QAAAA,UAAU,EAAEN,MAAM,CAACM;AAJvB;;AAOF,SAAKX,aAAL;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDT,KAApD,EAA2D,eAA3D,EAA4EC,MAA5E;AACA,6CACKD,KADL,2BAEGC,MAAM,CAACK,MAFV,kCAGON,KAAK,CAACC,MAAM,CAACK,MAAR,CAHZ;AAIIC,QAAAA,UAAU,kCACLP,KAAK,CAACC,MAAM,CAACK,MAAR,CAAL,CAAqBC,UAArB,IAAmC,EAD9B,2BAEPN,MAAM,CAACS,SAAP,CAAiBN,EAFV,EAEeH,MAAM,CAACS,SAFtB;AAJd;;AAUF;AACE,aAAOV,KAAP;AAtCJ;AAwCD","sourcesContent":["import {\n  RECEIVE_FLASHCARDS,\n  RECEIVE_DECKS,\n  ADD_FLASHCARD,\n  ADD_DECK,\n  DELETE_DECK\n} from '../actions/decks'\n\n\nexport function decks(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_DECKS:\n      return {\n        ...state,\n        ...action.decks\n      }\n    case ADD_DECK:\n      return {\n        ...state,\n        [action.deck.id]: action.deck\n      }     \n    case DELETE_DECK:\n      const copy = {}\n      Object.assign(copy, state);\n      delete(copy[action.deckId]);\n      return copy;\n\n    case RECEIVE_FLASHCARDS:\n      return {\n        ...state,\n        [action.deckId]: {\n          ...state[action.deckId],\n          flashcards: action.flashcards,\n        }\n      }\n    case ADD_FLASHCARD:\n      console.log('Adding flashcards to current state: ', state, 'with action: ', action)\n      return {\n        ...state,\n        [action.deckId]: {\n          ...state[action.deckId],\n          flashcards: {\n            ...state[action.deckId].flashcards || {},\n            [action.flashcard.id]: action.flashcard,\n          }\n        }\n      }\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}