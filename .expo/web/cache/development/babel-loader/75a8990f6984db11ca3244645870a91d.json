{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/Quiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { addFlashcard } from \"../actions/decks\";\nimport { clearLocalNotification, setLocalNotification } from \"../utils/helpers\";\n\nvar Quiz = function (_React$Component) {\n  _inherits(Quiz, _React$Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz() {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      nextIndex: 0,\n      correct: 0,\n      incorrect: 0,\n      showAnswer: false\n    };\n\n    _this.showAnswer = function () {};\n\n    _this.computeAccuracy = function () {\n      var total = _this.state.correct + _this.state.incorrect;\n      if (total === 0) return 0;\n      return _this.state.correct * 100.0 / total;\n    };\n\n    _this.handleCorrect = function () {\n      _this.setState(function (prevState) {\n        return {\n          nextIndex: prevState.nextIndex + 1,\n          correct: prevState.correct + 1,\n          showAnswer: false\n        };\n      });\n    };\n\n    _this.handleIncorrect = function () {\n      _this.setState(function (prevState) {\n        return {\n          nextIndex: prevState.nextIndex + 1,\n          incorrect: prevState.incorrect + 1,\n          showAnswer: false\n        };\n      });\n    };\n\n    _this.handleRestartQuiz = function () {\n      _this.setState({\n        nextIndex: 0,\n        correct: 0,\n        incorrect: 0,\n        showAnswer: false\n      });\n    };\n\n    _this.handleBackToDeck = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.updateNotificationSchedule = function () {\n      clearLocalNotification().then(setLocalNotification);\n    };\n\n    _this.renderCompleted = function () {\n      var deck = _this.props.navigation.state.params.deck;\n\n      _this.updateNotificationSchedule();\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 10,\n          paddingHorizontal: 10,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 24,\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Quiz Completed!\"), React.createElement(View, {\n        style: {\n          borderRadius: 10,\n          backgroundColor: 'lightgray',\n          padding: 20,\n          marginHorizontal: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          marginVertical: 10,\n          fontSize: 20,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Correct: \"), React.createElement(Text, {\n        style: {\n          flex: 1,\n          marginVertical: 10,\n          marginLeft: 5,\n          fontSize: 20,\n          color: 'black',\n          textAlign: 'right',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, _this.state.correct)), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          marginVertical: 10,\n          fontSize: 20,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, \"Total: \"), React.createElement(Text, {\n        style: {\n          marginVertical: 10,\n          marginLeft: 5,\n          fontSize: 20,\n          color: 'black',\n          textAlign: 'right',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, Object.keys(deck.flashcards).length)), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          marginVertical: 10,\n          fontSize: 20,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, \"Accuracy:\"), React.createElement(Text, {\n        style: {\n          marginVertical: 10,\n          marginLeft: 5,\n          fontSize: 20,\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, _this.computeAccuracy().toFixed(1), \"%\"))), React.createElement(View, {\n        style: {\n          marginTop: 20,\n          marginHorizontal: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.handleRestartQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'blue',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Restart Quiz\"))))), React.createElement(View, {\n        style: {\n          marginBottom: 50,\n          marginHorizontal: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.handleBackToDeck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'green',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'normal'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, \"Back to Deck\")))));\n    };\n\n    _this.renderFlashcard = function () {\n      var deck = _this.props.navigation.state.params.deck;\n      var flashcardIds = Object.keys(deck.flashcards);\n      var flashcard = deck.flashcards[flashcardIds[_this.state.nextIndex]];\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 20,\n          paddingHorizontal: 10,\n          justifyContent: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginVertical: 20,\n          textAlign: 'center',\n          fontSize: 20,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, _this.state.nextIndex + 1, \" of \", flashcardIds.length), _this.state.showAnswer ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 20,\n          textAlign: 'center',\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, \"Question\"), React.createElement(Text, {\n        style: {\n          marginTop: 20,\n          textAlign: 'center',\n          fontSize: 26,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, _this.state.showAnswer ? flashcard.answer : ' ')) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 20,\n          textAlign: 'center',\n          fontSize: 26\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, flashcard.question), React.createElement(Text, {\n        style: {\n          marginTop: 20,\n          textAlign: 'center',\n          fontSize: 12,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \"Answer\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.setState(function (prevState) {\n            return {\n              showAnswer: !prevState.showAnswer\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          marginVertical: 20,\n          marginHorizontal: 100,\n          backgroundColor: 'blue',\n          borderRadius: 20,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, \"Flip Card\")))), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end',\n          paddingHorizontal: 50,\n          paddingVertical: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.handleCorrect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'green',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, \"Correct\"))), React.createElement(TouchableOpacity, {\n        onPress: _this.handleIncorrect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'red',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, \"Incorrect\")))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"render\",\n    value: function render() {\n      var deck = this.props.navigation.state.params.deck;\n      var flashcardIds = Object.keys(deck.flashcards);\n\n      if (flashcardIds.length === 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            padding: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }\n        }, \"We can't play the game without any flashcards in the deck! Add some cards to start a quiz.\"));\n      }\n\n      if (this.state.nextIndex >= flashcardIds.length) {\n        return this.renderCompleted();\n      } else {\n        return this.renderFlashcard();\n      }\n    }\n  }]);\n\n  return Quiz;\n}(React.Component);\n\nexport default connect()(Quiz);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/Quiz.js"],"names":["React","connect","addFlashcard","clearLocalNotification","setLocalNotification","Quiz","state","nextIndex","correct","incorrect","showAnswer","computeAccuracy","total","handleCorrect","setState","prevState","handleIncorrect","handleRestartQuiz","handleBackToDeck","props","navigation","goBack","updateNotificationSchedule","then","renderCompleted","deck","params","flex","paddingVertical","paddingHorizontal","justifyContent","textAlign","fontSize","marginBottom","borderRadius","backgroundColor","padding","marginHorizontal","flexDirection","marginVertical","color","marginLeft","fontWeight","Object","keys","flashcards","length","toFixed","marginTop","minWidth","renderFlashcard","flashcardIds","flashcard","answer","question","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, FlatList, TouchableOpacity, TextInput } from 'react-native'\nimport { connect } from 'react-redux'\nimport { addFlashcard, } from '../actions/decks'\nimport { clearLocalNotification, setLocalNotification } from '../utils/helpers'\n\nclass Quiz extends React.Component {\n  state = {\n    nextIndex: 0,\n    correct: 0,\n    incorrect: 0,\n    showAnswer: false,\n  }\n\n  showAnswer = () => {\n\n  }\n\n  computeAccuracy = () => {\n    const total = this.state.correct + this.state.incorrect;\n    if (total === 0) return 0;\n\n    return (this.state.correct * 100.0) / total;\n  }\n\n  handleCorrect = () => {\n    this.setState((prevState) => ({\n      nextIndex: prevState.nextIndex + 1,\n      correct: prevState.correct + 1,\n      showAnswer: false\n    }));\n  } \n  \n  handleIncorrect = () => {\n    this.setState((prevState) => ({\n      nextIndex: prevState.nextIndex + 1,\n      incorrect: prevState.incorrect + 1,\n      showAnswer: false\n    }));\n  }\n\n  handleRestartQuiz = () => {\n    this.setState({\n      nextIndex: 0,\n      correct: 0,\n      incorrect: 0,\n      showAnswer: false,\n    })\n  }\n\n  handleBackToDeck = () => {\n    this.props.navigation.goBack();\n  }\n\n  updateNotificationSchedule = () => {\n    clearLocalNotification().then(setLocalNotification);\n  }\n\n  renderCompleted = () => {\n    const { deck } = this.props.navigation.state.params;\n    this.updateNotificationSchedule();\n    return (\n      <View style={{flex: 1}}>\n        <View style={{flex: 1, paddingVertical: 10, paddingHorizontal: 10, justifyContent: 'center'}}>\n          <Text style={{textAlign: 'center', fontSize: 24, marginBottom: 20 }}>Quiz Completed!</Text>\n          <View style={{ borderRadius: 10, backgroundColor: 'lightgray', padding: 20, marginHorizontal: 40 }}>\n            <View style={{flexDirection: 'row'}}>\n              <Text style={{ flex: 1, marginVertical: 10, fontSize: 20, color: 'gray' }}>Correct: </Text>\n              <Text style={{ flex: 1, marginVertical: 10, marginLeft: 5, fontSize: 20, color: 'black', textAlign: 'right', fontWeight: 'bold'}}>{this.state.correct}</Text>\n            </View>\n            <View style={{flexDirection: 'row', }}>\n              <Text style={{ flex: 1, marginVertical: 10, fontSize: 20, color: 'gray' }}>Total: </Text>\n              <Text style={{ marginVertical: 10, marginLeft: 5, fontSize: 20, color: 'black', textAlign: 'right', fontWeight: 'bold'}}>{Object.keys(deck.flashcards).length}</Text>\n            </View>\n            <View style={{flexDirection: 'row', }}>\n              <Text style={{ flex: 1, marginVertical: 10, fontSize: 20, color: 'gray' }}>Accuracy:</Text>\n              <Text style={{ marginVertical: 10, marginLeft: 5, fontSize: 20, color: 'black', fontWeight: 'bold'}}>{this.computeAccuracy().toFixed(1)}%</Text>\n            </View>\n          </View>\n          <View style={{marginTop: 20, marginHorizontal: 40}}>\n            <TouchableOpacity onPress={this.handleRestartQuiz}>\n              <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'blue', borderRadius: 5, padding: 10 }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Restart Quiz</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n\n        </View>\n        <View style={{marginBottom: 50, marginHorizontal: 50}}>\n          <TouchableOpacity onPress={this.handleBackToDeck}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'green', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'normal' }}>Back to Deck</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  renderFlashcard = () => {\n    const { deck } = this.props.navigation.state.params;\n    const flashcardIds = Object.keys(deck.flashcards);\n    const flashcard = deck.flashcards[flashcardIds[this.state.nextIndex]];\n\n    return (\n      <View style={{flex: 1}}>\n        <View style={{ flex: 1, paddingVertical: 20, paddingHorizontal: 10, justifyContent: 'flex-start' }}>\n          <Text style={{ marginVertical: 20, textAlign: 'center', fontSize: 20, color: 'gray' }}>{this.state.nextIndex+1} of {flashcardIds.length}</Text>\n          {this.state.showAnswer \n            ? <View>\n                <Text style={{ marginTop: 20, textAlign: 'center', fontSize: 12 }}>Question</Text>\n                <Text style={{ marginTop: 20, textAlign: 'center', fontSize: 26, color: 'gray' }}>{this.state.showAnswer ? flashcard.answer : ' '}</Text>\n              </View>\n            : <View>\n                <Text style={{ marginTop: 20, textAlign: 'center', fontSize: 26 }}>{flashcard.question}</Text>\n                <Text style={{ marginTop: 20, textAlign: 'center', fontSize: 12, color: 'gray' }}>Answer</Text>\n              </View>\n          }\n  \n          <TouchableOpacity onPress={() => this.setState((prevState) => ({showAnswer: !prevState.showAnswer}))}>\n            <View style={{ marginVertical: 20, marginHorizontal: 100, backgroundColor: 'blue', borderRadius: 20, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Flip Card</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={{ flex: 1, justifyContent: 'flex-end', paddingHorizontal: 50, paddingVertical: 100 }}>\n          <TouchableOpacity onPress={this.handleCorrect}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'green', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Correct</Text>\n            </View>\n          </TouchableOpacity>\n\n          <TouchableOpacity onPress={this.handleIncorrect}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'red', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Incorrect</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const { deck } = this.props.navigation.state.params;\n    const flashcardIds = Object.keys(deck.flashcards);\n\n    if (flashcardIds.length === 0) {\n      return (\n        <View style={{flex: 1, justifyContent: 'center', padding: 20}}>\n          <Text style={{textAlign: 'center', fontSize: 20}}>We can't play the game without any flashcards in the deck! Add some cards to start a quiz.</Text>\n        </View>\n      );\n    }\n\n    if (this.state.nextIndex >= flashcardIds.length) {\n      return this.renderCompleted();\n    } else {\n      return this.renderFlashcard();\n    }\n  }\n}\n\nexport default connect()(Quiz)"]},"metadata":{},"sourceType":"module"}