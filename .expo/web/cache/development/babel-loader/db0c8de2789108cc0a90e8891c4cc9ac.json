{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from \"./reducers\";\nimport { handleReceiveDecks } from \"./actions/decks\";\nimport 'react-native-gesture-handler';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport Deck from \"./components/Deck\";\nimport AddCard from \"./components/AddCard\";\nimport Quiz from \"./components/Quiz\";\nimport Constants from \"expo-constants\";\nimport middleware from \"./middleware\";\nimport TabNav from \"./components/Tabs\";\n\nfunction TopBar(_ref) {\n  var backgroundColor = _ref.backgroundColor,\n      props = _objectWithoutProperties(_ref, [\"backgroundColor\"]);\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: backgroundColor,\n      height: Constants.statusBarHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, _extends({\n    translucent: true,\n    backgroundColor: backgroundColor\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar MainNavigator = createAppContainer(createStackNavigator({\n  Home: {\n    screen: TabNav,\n    navigationOptions: {\n      headerShown: false\n    }\n  },\n  Deck: {\n    screen: Deck,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: navigation.state.params.deck.title,\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: 'black'\n        }\n      };\n    }\n  },\n  AddCard: {\n    screen: AddCard,\n    navigationOptions: function navigationOptions(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: 'Add Card',\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: 'black'\n        }\n      };\n    }\n  },\n  Quiz: {\n    screen: Quiz,\n    navigationOptions: function navigationOptions(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: \"Quiz: \" + navigation.state.params.deck.title,\n        headerBackTitle: '',\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: 'black'\n        }\n      };\n    }\n  }\n}));\nvar store = createStore(reducer, middleware);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.storageKey = '@mobile-flashcard:state';\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      store.dispatch(handleReceiveDecks());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, React.createElement(TopBar, {\n        backgroundColor: 'lightgray',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), React.createElement(MainNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/App.js"],"names":["React","createStore","Provider","reducer","handleReceiveDecks","createStackNavigator","createAppContainer","Deck","AddCard","Quiz","Constants","middleware","TabNav","TopBar","backgroundColor","props","height","statusBarHeight","MainNavigator","Home","screen","navigationOptions","headerShown","navigation","title","state","params","deck","headerTintColor","headerStyle","headerBackTitle","store","App","storageKey","dispatch","flex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Platform, StatusBar } from 'react-native';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport { handleReceiveDecks } from './actions/decks'\nimport 'react-native-gesture-handler';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport Deck from './components/Deck';\nimport AddCard from './components/AddCard';\nimport Quiz from './components/Quiz';\nimport Constants from \"expo-constants\";\nimport middleware from './middleware'\nimport TabNav from './components/Tabs'\n\n\nfunction TopBar ({backgroundColor, ...props}) {\n  return (\n    <View style={{ backgroundColor, height: Constants.statusBarHeight }}>\n      <StatusBar translucent backgroundColor={backgroundColor} {...props} />\n    </View>\n  )\n}\n\nconst MainNavigator = createAppContainer(createStackNavigator({\n  Home: {\n    screen: TabNav,\n    navigationOptions: {\n      headerShown: false\n    }\n  },\n  Deck: {\n    screen: Deck,\n    navigationOptions: ({navigation}) => ({\n      title: navigation.state.params.deck.title,\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: 'black',\n      }\n    })\n  },\n  AddCard: {\n    screen: AddCard,\n    navigationOptions: ({navigation}) => ({\n      title: 'Add Card',\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: 'black',\n      }\n    })\n  },\n  Quiz: {\n    screen: Quiz,\n    navigationOptions: ({navigation}) => ({\n      title: `Quiz: ${navigation.state.params.deck.title}`,\n      headerBackTitle: '',\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: 'black',\n      }\n    })\n  }\n}, \n));\n\nconst store = createStore(reducer, middleware);\n\nclass App extends React.Component {\n  storageKey = '@mobile-flashcard:state';\n\n  componentDidMount() {\n    store.dispatch(handleReceiveDecks());\n  }\n\n  render() {\n    return (\n    <Provider store={store}>\n      <View style={{flex: 1}}>\n          <TopBar backgroundColor={'lightgray'} />\n          <MainNavigator />\n        </View>\n    </Provider>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}