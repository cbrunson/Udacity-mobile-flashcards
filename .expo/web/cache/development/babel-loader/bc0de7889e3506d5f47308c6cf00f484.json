{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/Deck.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { connect } from 'react-redux';\nimport { handleDeleteDeck } from \"../actions/decks\";\n\nvar Deck = function (_React$Component) {\n  _inherits(Deck, _React$Component);\n\n  var _super = _createSuper(Deck);\n\n  function Deck() {\n    var _this;\n\n    _classCallCheck(this, Deck);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleDelete = function () {\n      var deck = _this.props.deck;\n\n      _this.props.dispatch(handleDeleteDeck(deck.id));\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.deleteDeck = function () {\n      var deck = _this.props.deck;\n      Alert.alert(deck.title, 'Are you sure you want to delete this deck?', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this.handleDelete();\n        }\n      }, {\n        text: 'Cancel',\n        style: 'cancel'\n      }], {\n        cancelable: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Deck, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var deck = this.props.deck;\n\n      if (!deck) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 20,\n          paddingHorizontal: 10,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, deck.title), React.createElement(Text, {\n        style: {\n          marginTop: 10,\n          textAlign: 'center',\n          fontSize: 20,\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, Object.keys(deck.flashcards).length, \" Cards in Deck\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-start',\n          paddingHorizontal: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('AddCard', {\n            deck: deck\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'green',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \"Add a Card\"))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Quiz', {\n            deck: deck\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'blue',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, \"Start the Quiz\")))), React.createElement(View, {\n        style: {\n          paddingHorizontal: 50,\n          paddingBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.deleteDeck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          minWidth: '50%',\n          marginVertical: 10,\n          backgroundColor: 'white',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'red',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'normal'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"Delete this Deck\")))));\n    }\n  }]);\n\n  return Deck;\n}(React.Component);\n\nfunction mapStateToProps(state, props) {\n  return {\n    deck: state.decks[props.navigation.state.params.deck.id]\n  };\n}\n\nexport default connect(mapStateToProps)(Deck);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/Deck.js"],"names":["React","connect","handleDeleteDeck","Deck","handleDelete","deck","props","dispatch","id","navigation","goBack","deleteDeck","Alert","alert","title","text","onPress","style","cancelable","flex","paddingVertical","paddingHorizontal","justifyContent","textAlign","fontSize","marginTop","color","Object","keys","flashcards","length","navigate","minWidth","marginVertical","backgroundColor","borderRadius","padding","fontWeight","paddingBottom","Component","mapStateToProps","state","decks","params"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, FlatList, TouchableOpacity, Alert } from 'react-native'\nimport { connect } from 'react-redux'\nimport { handleDeleteDeck } from '../actions/decks'\n\nclass Deck extends React.Component {\n\n  handleDelete = () => {\n    const { deck } = this.props\n    this.props.dispatch(handleDeleteDeck(deck.id))\n    this.props.navigation.goBack();\n  }\n\n  deleteDeck = () => {\n    const { deck } = this.props\n    Alert.alert(\n      deck.title,\n      'Are you sure you want to delete this deck?',\n      [\n        { text: 'Yes', onPress: () => this.handleDelete() },\n        { text: 'Cancel', style: 'cancel' },\n      ],\n      { cancelable: true }\n    );\n\n  }\n\n\n  render() {\n    const { deck } = this.props\n\n    if (!deck) {\n      return null\n    }\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, paddingVertical: 20, paddingHorizontal: 10, justifyContent: 'center' }}>\n          <Text style={{ textAlign: 'center', fontSize: 30 }}>{deck.title}</Text>\n          <Text style={{ marginTop: 10, textAlign: 'center', fontSize: 20, color: 'gray' }}>{Object.keys(deck.flashcards).length} Cards in Deck</Text>\n        </View>\n        <View style={{ flex: 1, justifyContent: 'flex-start', paddingHorizontal: 50 }}>\n          <TouchableOpacity onPress={() => this.props.navigation.navigate('AddCard', { deck: deck })}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'green', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Add a Card</Text>\n            </View>\n          </TouchableOpacity>\n\n          <TouchableOpacity onPress={() => this.props.navigation.navigate('Quiz', { deck: deck })}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'blue', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold' }}>Start the Quiz</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={{ paddingHorizontal: 50, paddingBottom: 100 }}>\n          <TouchableOpacity onPress={this.deleteDeck}>\n            <View style={{ minWidth: '50%', marginVertical: 10, backgroundColor: 'white', borderRadius: 5, padding: 10 }}>\n              <Text style={{ color: 'red', textAlign: 'center', fontSize: 14, fontWeight: 'normal' }}>Delete this Deck</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    deck: state.decks[props.navigation.state.params.deck.id]\n  }\n}\n\nexport default connect(mapStateToProps)(Deck)"]},"metadata":{},"sourceType":"module"}