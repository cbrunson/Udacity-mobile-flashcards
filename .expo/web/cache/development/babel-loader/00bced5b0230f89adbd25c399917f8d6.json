{"ast":null,"code":"import { _addDeck, _addFlashcard, _getDecks, _deleteDeck } from \"../utils/_DATA\";\nexport var RECEIVE_DECKS = 'RECEIVE_DECKS';\nexport var DELETE_DECK = 'DELETE_DECK';\nexport var RECEIVE_FLASHCARDS = 'RECEIVE_FLASHCARDS';\nexport var ADD_DECK = 'ADD_DECK';\nexport var ADD_FLASHCARD = 'ADD_FLASHCARD';\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport function receiveDecks(decks) {\n  return {\n    type: RECEIVE_DECKS,\n    decks: decks\n  };\n}\nexport function handleReceiveDecks() {\n  return function (dispatch) {\n    _getDecks().then(function (decks) {\n      dispatch(receiveDecks(decks));\n    });\n  };\n}\nexport function addDeck(deck) {\n  return {\n    type: ADD_DECK,\n    deck: deck\n  };\n}\nexport function handleAddDeck(title) {\n  return function (dispatch) {\n    _addDeck(title).then(function (deck) {\n      return dispatch(addDeck(deck));\n    });\n  };\n}\nexport function deleteDeck(deckId) {\n  return {\n    type: DELETE_DECK,\n    deckId: deckId\n  };\n}\nexport function handleDeleteDeck(deckId) {\n  return function (dispatch) {\n    _deleteDeck(deckId).then(function () {\n      return dispatch(deleteDeck(deckId));\n    });\n  };\n}\nexport function addFlashcard(deckId, flashcard) {\n  return {\n    type: ADD_FLASHCARD,\n    deckId: deckId,\n    flashcard: flashcard\n  };\n}\nexport function handleAddFlashcard(deckId, question, answer) {\n  return function (dispatch) {\n    _addFlashcard(deckId, question, answer).then(function (flashcard) {\n      return dispatch(addFlashcard(deckId, flashcard));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/actions/decks.js"],"names":["_addDeck","_addFlashcard","_getDecks","_deleteDeck","RECEIVE_DECKS","DELETE_DECK","RECEIVE_FLASHCARDS","ADD_DECK","ADD_FLASHCARD","generateUID","Math","random","toString","substring","receiveDecks","decks","type","handleReceiveDecks","dispatch","then","addDeck","deck","handleAddDeck","title","deleteDeck","deckId","handleDeleteDeck","addFlashcard","flashcard","handleAddFlashcard","question","answer"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,aAAlB,EAAiCC,SAAjC,EAA4CC,WAA5C;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;;AAGP,SAASC,WAAT,GAAuB;AACnB,SAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,IAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,CAArD;AACH;;AAED,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEZ,aADH;AAEHW,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,kBAAT,GAA8B;AACjC,SAAO,UAACC,QAAD,EAAc;AACjBhB,IAAAA,SAAS,GAAGiB,IAAZ,CAAiB,UAAAJ,KAAK,EAAI;AACtBG,MAAAA,QAAQ,CAACJ,YAAY,CAACC,KAAD,CAAb,CAAR;AACH,KAFD;AAGH,GAJD;AAKH;AAED,OAAO,SAASK,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,SAAO;AACHL,IAAAA,IAAI,EAAET,QADH;AAEHc,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH;AAED,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,SAAO,UAACL,QAAD,EAAc;AACjBlB,IAAAA,QAAQ,CAACuB,KAAD,CAAR,CAAgBJ,IAAhB,CAAqB,UAACE,IAAD;AAAA,aAAUH,QAAQ,CAACE,OAAO,CAACC,IAAD,CAAR,CAAlB;AAAA,KAArB;AACH,GAFD;AAGH;AAED,OAAO,SAASG,UAAT,CAAoBC,MAApB,EAA4B;AAC/B,SAAO;AACHT,IAAAA,IAAI,EAAEX,WADH;AAEHoB,IAAAA,MAAM,EAANA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,gBAAT,CAA0BD,MAA1B,EAAkC;AACrC,SAAO,UAACP,QAAD,EAAc;AACjBf,IAAAA,WAAW,CAACsB,MAAD,CAAX,CAAoBN,IAApB,CAAyB;AAAA,aAAMD,QAAQ,CAACM,UAAU,CAACC,MAAD,CAAX,CAAd;AAAA,KAAzB;AACH,GAFD;AAGH;AAED,OAAO,SAASE,YAAT,CAAsBF,MAAtB,EAA8BG,SAA9B,EAAyC;AAC5C,SAAO;AACHZ,IAAAA,IAAI,EAAER,aADH;AAEHiB,IAAAA,MAAM,EAAEA,MAFL;AAGHG,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAKH;AAED,OAAO,SAASC,kBAAT,CAA4BJ,MAA5B,EAAoCK,QAApC,EAA8CC,MAA9C,EAAsD;AACzD,SAAO,UAACb,QAAD,EAAc;AACjBjB,IAAAA,aAAa,CAACwB,MAAD,EAASK,QAAT,EAAmBC,MAAnB,CAAb,CACKZ,IADL,CACU,UAACS,SAAD;AAAA,aAAeV,QAAQ,CAACS,YAAY,CAACF,MAAD,EAASG,SAAT,CAAb,CAAvB;AAAA,KADV;AAEH,GAHD;AAIH","sourcesContent":["import {_addDeck, _addFlashcard, _getDecks, _deleteDeck} from '../utils/_DATA'\n\nexport const RECEIVE_DECKS = 'RECEIVE_DECKS'\nexport const DELETE_DECK = 'DELETE_DECK'\nexport const RECEIVE_FLASHCARDS = 'RECEIVE_FLASHCARDS'\nexport const ADD_DECK = 'ADD_DECK'\nexport const ADD_FLASHCARD = 'ADD_FLASHCARD'\n\n\nfunction generateUID() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function receiveDecks(decks) {\n    return {\n        type: RECEIVE_DECKS,\n        decks\n    }\n}\n\nexport function handleReceiveDecks() {\n    return (dispatch) => {\n        _getDecks().then(decks => {\n            dispatch(receiveDecks(decks))\n        });\n    };\n}\n\nexport function addDeck(deck) {\n    return {\n        type: ADD_DECK,\n        deck: deck\n    }\n}\n\nexport function handleAddDeck(title) {\n    return (dispatch) => {\n        _addDeck(title).then((deck) => dispatch(addDeck(deck)))\n    }\n}\n\nexport function deleteDeck(deckId) {\n    return {\n        type: DELETE_DECK,\n        deckId\n    }\n}\n\nexport function handleDeleteDeck(deckId) {\n    return (dispatch) => {\n        _deleteDeck(deckId).then(() => dispatch(deleteDeck(deckId)));\n    }\n}\n\nexport function addFlashcard(deckId, flashcard) {\n    return {\n        type: ADD_FLASHCARD,\n        deckId: deckId,\n        flashcard: flashcard\n    }\n}\n\nexport function handleAddFlashcard(deckId, question, answer) {\n    return (dispatch) => {\n        _addFlashcard(deckId, question, answer)\n            .then((flashcard) => dispatch(addFlashcard(deckId, flashcard)))\n    }\n}"]},"metadata":{},"sourceType":"module"}