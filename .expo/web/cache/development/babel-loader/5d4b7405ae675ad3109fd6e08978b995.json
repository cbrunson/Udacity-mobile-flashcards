{"ast":null,"code":"import AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nvar NOTIFICATION_KEY = 'mobile-flashcards:notifications';\nexport function getRandomNumber() {\n  return Math.floor(Math.random() * 100000) + 0;\n}\nexport function clearLocalNotification() {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY).then(Notifications.cancelAllScheduledNotificationsAsync);\n}\n\nfunction createNotification() {\n  return {\n    title: 'Are you up for a deck of cards?',\n    body: \"ðŸ‘‹ don't forget to practice your decks today!\",\n    ios: {\n      sound: true\n    },\n    android: {\n      sound: true,\n      priority: 'high',\n      sticky: false,\n      vibrate: true\n    }\n  };\n}\n\nexport function setLocalNotification() {\n  AsyncStorage.getItem(NOTIFICATION_KEY).then(JSON.parse).then(function (data) {\n    if (data === null) {\n      Permissions.askAsync(Permissions.NOTIFICATIONS).then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'granted') {\n          Notifications.cancelAllScheduledNotificationsAsync();\n          var tomorrow = new Date();\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          tomorrow.setHours(20);\n          tomorrow.setMinutes(0);\n          Notifications.scheduleLocalNotificationAsync(createNotification(), {\n            time: tomorrow,\n            repeat: 'day'\n          });\n          AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true));\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/utils/helpers.js"],"names":["Notifications","Permissions","NOTIFICATION_KEY","getRandomNumber","Math","floor","random","clearLocalNotification","AsyncStorage","removeItem","then","cancelAllScheduledNotificationsAsync","createNotification","title","body","ios","sound","android","priority","sticky","vibrate","setLocalNotification","getItem","JSON","parse","data","askAsync","NOTIFICATIONS","status","tomorrow","Date","setDate","getDate","setHours","setMinutes","scheduleLocalNotificationAsync","time","repeat","setItem","stringify"],"mappings":";AACA,SAASA,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,IAAMC,gBAAgB,GAAG,iCAAzB;AAEA,OAAO,SAASC,eAAT,GAA4B;AACjC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,IAAqC,CAA5C;AACD;AAED,OAAO,SAASC,sBAAT,GAAmC;AACxC,SAAOC,YAAY,CAACC,UAAb,CAAwBP,gBAAxB,EACJQ,IADI,CACCV,aAAa,CAACW,oCADf,CAAP;AAED;;AAED,SAASC,kBAAT,GAA+B;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAE,iCADF;AAELC,IAAAA,IAAI,EAAE,+CAFD;AAGLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,KAAK,EAAE;AADJ,KAHA;AAMLC,IAAAA,OAAO,EAAE;AACPD,MAAAA,KAAK,EAAE,IADA;AAEPE,MAAAA,QAAQ,EAAE,MAFH;AAGPC,MAAAA,MAAM,EAAE,KAHD;AAIPC,MAAAA,OAAO,EAAE;AAJF;AANJ,GAAP;AAaD;;AAED,OAAO,SAASC,oBAAT,GAAiC;AACtCb,EAAAA,YAAY,CAACc,OAAb,CAAqBpB,gBAArB,EACGQ,IADH,CACQa,IAAI,CAACC,KADb,EAEGd,IAFH,CAEQ,UAACe,IAAD,EAAU;AACd,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBxB,MAAAA,WAAW,CAACyB,QAAZ,CAAqBzB,WAAW,CAAC0B,aAAjC,EACGjB,IADH,CACQ,gBAAgB;AAAA,YAAbkB,MAAa,QAAbA,MAAa;;AACpB,YAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB5B,UAAAA,aAAa,CAACW,oCAAd;AAEA,cAAIkB,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACAD,UAAAA,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,OAAT,KAAqB,CAAtC;AACAH,UAAAA,QAAQ,CAACI,QAAT,CAAkB,EAAlB;AACAJ,UAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AAEAlC,UAAAA,aAAa,CAACmC,8BAAd,CAA6CvB,kBAAkB,EAA/D,EAAmE;AAAEwB,YAAAA,IAAI,EAAEP,QAAR;AAAkBQ,YAAAA,MAAM,EAAE;AAA1B,WAAnE;AACA7B,UAAAA,YAAY,CAAC8B,OAAb,CAAqBpC,gBAArB,EAAuCqB,IAAI,CAACgB,SAAL,CAAe,IAAf,CAAvC;AACD;AACF,OAbH;AAcD;AACF,GAnBH;AAoBD","sourcesContent":["import { AsyncStorage } from 'react-native';\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\n\nconst NOTIFICATION_KEY = 'mobile-flashcards:notifications'\n\nexport function getRandomNumber () {\n  return Math.floor(Math.random() * 100000) + 0\n}\n\nexport function clearLocalNotification () {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY)\n    .then(Notifications.cancelAllScheduledNotificationsAsync)\n}\n\nfunction createNotification () {\n  return {\n    title: 'Are you up for a deck of cards?',\n    body: \"ðŸ‘‹ don't forget to practice your decks today!\",\n    ios: {\n      sound: true,\n    },\n    android: {\n      sound: true,\n      priority: 'high',\n      sticky: false,\n      vibrate: true,\n    }\n  }\n}\n\nexport function setLocalNotification () {\n  AsyncStorage.getItem(NOTIFICATION_KEY)\n    .then(JSON.parse)\n    .then((data) => {\n      if (data === null) {\n        Permissions.askAsync(Permissions.NOTIFICATIONS)\n          .then(({ status }) => {\n            if (status === 'granted') {\n              Notifications.cancelAllScheduledNotificationsAsync()\n\n              let tomorrow = new Date()\n              tomorrow.setDate(tomorrow.getDate() + 1)\n              tomorrow.setHours(20)\n              tomorrow.setMinutes(0)\n\n              Notifications.scheduleLocalNotificationAsync(createNotification(), { time: tomorrow, repeat: 'day' })\n              AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true))\n            }\n          })\n      }\n    })\n}\n"]},"metadata":{},"sourceType":"module"}