{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/AddDeck.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { handleAddDeck } from \"../actions/decks\";\nimport { NavigationActions } from 'react-navigation';\nimport { getRandomNumber } from \"../utils/helpers\";\n\nvar AddDeck = function (_React$Component) {\n  _inherits(AddDeck, _React$Component);\n\n  var _super = _createSuper(AddDeck);\n\n  function AddDeck() {\n    var _this;\n\n    _classCallCheck(this, AddDeck);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      deck: {\n        deckId: 'Deck' + getRandomNumber(),\n        deckTitle: '',\n        cards: []\n      }\n    };\n\n    _this.grabDeckTitle = function (input) {\n      var deck = _objectSpread({}, _this.state.deck);\n\n      deck.deckTitle = input;\n\n      _this.setState(function () {\n        return {\n          deck: deck\n        };\n      });\n    };\n\n    _this.resetDeckState = function () {\n      setTimeout(function () {\n        var resetDeck = _objectSpread({}, _this.state.deck);\n\n        resetDeck.deckTitle = '';\n        resetDeck.deckId = 'Deck' + getRandomNumber();\n        console.log('state reset');\n\n        _this.setState(function () {\n          return {\n            deck: resetDeck\n          };\n        });\n      }, 500);\n    };\n\n    _this.addDeck = function () {\n      var newDeck = _objectSpread({}, _this.state.deck);\n\n      _this.props.dispatch(handleAddDeck(newDeck.deckTitle));\n\n      var resetDeck = _objectSpread({}, _this.state.deck);\n\n      _this.props.navigation.goBack();\n\n      setTimeout(function () {\n        _this.props.navigation.navigate('Deck', {\n          deckId: resetDeck.deckId\n        });\n      }, 200);\n\n      _this.resetDeckState();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddDeck, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingVertical: 10,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 20,\n          marginVertical: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"Enter the title of the new deck:\"), React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'gray',\n          borderRadius: 5,\n          padding: 10,\n          marginTop: 10\n        },\n        onChangeText: this.grabDeckTitle,\n        value: this.state.deck.deckTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end',\n          paddingBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.addDeck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          marginVertical: 10,\n          backgroundColor: 'blue',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      }, \"Add Deck\")))));\n    }\n  }]);\n\n  return AddDeck;\n}(React.Component);\n\nexport default connect()(AddDeck);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/AddDeck.js"],"names":["React","connect","handleAddDeck","NavigationActions","getRandomNumber","AddDeck","state","deck","deckId","deckTitle","cards","grabDeckTitle","input","setState","resetDeckState","setTimeout","resetDeck","console","log","addDeck","newDeck","props","dispatch","navigation","goBack","navigate","flex","paddingHorizontal","paddingVertical","justifyContent","textAlign","fontSize","marginVertical","borderWidth","borderColor","borderRadius","padding","marginTop","paddingBottom","backgroundColor","color","fontWeight","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,eAAT;;IAGMC,O;;;;;;;;;;;;;;;UAKFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAG;AACLC,QAAAA,MAAM,EAAE,SAASJ,eAAe,EAD3B;AAELK,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,KAAK,EAAG;AAHH;AADH,K;;UAQNC,a,GAAgB,UAACC,KAAD,EAAW;AACzB,UAAIL,IAAI,qBAAO,MAAKD,KAAL,CAAWC,IAAlB,CAAR;;AACAA,MAAAA,IAAI,CAACE,SAAL,GAAiBG,KAAjB;;AACA,YAAKC,QAAL,CAAc;AAAA,eAAO;AAAEN,UAAAA,IAAI,EAAJA;AAAF,SAAP;AAAA,OAAd;AACD,K;;UAEDO,c,GAAiB,YAAM;AACrBC,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIC,SAAS,qBAAO,MAAKV,KAAL,CAAWC,IAAlB,CAAb;;AACAS,QAAAA,SAAS,CAACP,SAAV,GAAsB,EAAtB;AACAO,QAAAA,SAAS,CAACR,MAAV,GAAmB,SAASJ,eAAe,EAA3C;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,cAAKL,QAAL,CAAc;AAAA,iBAAO;AAAEN,YAAAA,IAAI,EAAES;AAAR,WAAP;AAAA,SAAd;AACD,OANS,EAMR,GANQ,CAAV;AAOH,K;;UAEDG,O,GAAU,YAAM;AAQZ,UAAMC,OAAO,qBAAO,MAAKd,KAAL,CAAWC,IAAlB,CAAb;;AACA,YAAKc,KAAL,CAAWC,QAAX,CAAoBpB,aAAa,CAACkB,OAAO,CAACX,SAAT,CAAjC;;AACA,UAAIO,SAAS,qBAAO,MAAKV,KAAL,CAAWC,IAAlB,CAAb;;AAEA,YAAKc,KAAL,CAAWE,UAAX,CAAsBC,MAAtB;;AAMAT,MAAAA,UAAU,CAAC,YAAM;AACb,cAAKM,KAAL,CAAWE,UAAX,CAAsBE,QAAtB,CACA,MADA,EAEA;AAACjB,UAAAA,MAAM,EAAEQ,SAAS,CAACR;AAAnB,SAFA;AAIH,OALS,EAKP,GALO,CAAV;;AAMA,YAAKM,cAAL;AAGH,K;;;;;;;6BAIQ;AACP,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACY,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,iBAAiB,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,IAAI,EAAE,CAAP;AAAUE,UAAAA,eAAe,EAAE,EAA3B;AAA+BC,UAAAA,cAAc,EAAE;AAA/C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE,QAAZ;AAAsBC,UAAAA,QAAQ,EAAE,EAAhC;AAAoCC,UAAAA,cAAc,EAAE;AAApD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE,CAAd;AAAiBC,UAAAA,WAAW,EAAE,MAA9B;AAAsCC,UAAAA,YAAY,EAAE,CAApD;AAAuDC,UAAAA,OAAO,EAAE,EAAhE;AAAoEC,UAAAA,SAAS,EAAE;AAA/E,SADX;AAGV,QAAA,YAAY,EAAE,KAAK1B,aAHT;AAII,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBE,SAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACiB,UAAAA,IAAI,EAAE,CAAP;AAAUG,UAAAA,cAAc,EAAE,UAA1B;AAAsCS,UAAAA,aAAa,EAAE;AAArD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKnB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEa,UAAAA,cAAc,EAAE,EAAlB;AAAsBO,UAAAA,eAAe,EAAE,MAAvC;AAA+CJ,UAAAA,YAAY,EAAE,CAA7D;AAAgEC,UAAAA,OAAO,EAAE;AAAzE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAE,OAAR;AAAiBV,UAAAA,SAAS,EAAE,QAA5B;AAAsCC,UAAAA,QAAQ,EAAE,EAAhD;AAAoDU,UAAAA,UAAU,EAAE;AAAhE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CADJ,CATJ,CADJ;AAmBD;;;;EAhFiBzC,KAAK,CAAC0C,S;;AAmF5B,eAAezC,OAAO,GAAGI,OAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native'\nimport { connect } from 'react-redux'\nimport { handleAddDeck } from '../actions/decks'\nimport { NavigationActions } from 'react-navigation'\nimport { getRandomNumber } from '../utils/helpers'\n\n\nclass AddDeck extends React.Component {\n/*     state = {\n        title: '',\n    } */\n\n    state = {\n        deck : {\n          deckId: 'Deck' + getRandomNumber(),\n          deckTitle: '',\n          cards : []\n          }\n      }\n\n      grabDeckTitle = (input) => {\n        let deck = {...this.state.deck}\n        deck.deckTitle = input\n        this.setState(() => ({ deck }))\n      }\n\n      resetDeckState = () => {\n        setTimeout(() => {\n          let resetDeck = {...this.state.deck}\n          resetDeck.deckTitle = ''\n          resetDeck.deckId = 'Deck' + getRandomNumber()\n          console.log('state reset')\n          this.setState(() => ({ deck: resetDeck }))\n        },500)\n    }\n\n    addDeck = () => {\n        //let { title } = this.state;\n        //title = title.trim();\n\n        /*if (!title) {\n            alert('Title must be provided');\n            return;\n        }*/\n        const newDeck = {...this.state.deck};\n        this.props.dispatch(handleAddDeck(newDeck.deckTitle));\n        let resetDeck = {...this.state.deck}\n\n        this.props.navigation.goBack();\n        //alert(this.props.value);\n\n        //this.setState({title: ''});\n//        this.props.navigation.goBack();\n\n        setTimeout(() => {\n            this.props.navigation.navigate(\n            'Deck',\n            {deckId: resetDeck.deckId}\n            );\n        }, 200);\n        this.resetDeckState();\n\n  //      this.props.navigation.navigate('Deck', {deck: newDeck});\n    }\n\n\n\n    render() {     \n      return (\n          <View style={{flex: 1, paddingHorizontal: 50}}>\n              <View style={{flex: 1, paddingVertical: 10, justifyContent: 'center'}}>\n                  <Text style={{textAlign: 'center', fontSize: 20, marginVertical: 10}}>Enter the title of the new deck:</Text>\n                  <TextInput\n                      style={{borderWidth: 1, borderColor: 'gray', borderRadius: 5, padding: 10, marginTop: 10}} \n/*                       onChangeText={text => this.setState({title: text})} */\n        onChangeText={this.grabDeckTitle}\n                      value={this.state.deck.deckTitle} />\n              </View>\n              <View style={{flex: 1, justifyContent: 'flex-end', paddingBottom: 100}}>\n                  <TouchableOpacity onPress={this.addDeck}>\n                      <View style={{ marginVertical: 10, backgroundColor: 'blue', borderRadius: 5, padding: 10}}>\n                          <Text style={{color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold'}}>Add Deck</Text>\n                      </View>\n                  </TouchableOpacity>\n              </View>\n          </View>\n      )\n    }\n}\n\nexport default connect()(AddDeck)"]},"metadata":{},"sourceType":"module"}