{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/AddCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { handleAddFlashcard } from \"../actions/decks\";\n\nvar AddCard = function (_React$Component) {\n  _inherits(AddCard, _React$Component);\n\n  var _super = _createSuper(AddCard);\n\n  function AddCard() {\n    var _this;\n\n    _classCallCheck(this, AddCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      question: '',\n      answer: ''\n    };\n\n    _this.addCard = function () {\n      var _this$state = _this.state,\n          question = _this$state.question,\n          answer = _this$state.answer;\n      var deck = _this.props.navigation.state.params.deck;\n      question = question.trim();\n      answer = answer.trim();\n\n      if (!question || !answer) {\n        alert('You must provide a question and an answer.');\n        return;\n      }\n\n      _this.props.dispatch(handleAddFlashcard(deck.id, question, answer));\n\n      _this.props.navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var deck = this.props.navigation.state.params.deck;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingVertical: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'gray',\n          borderRadius: 5,\n          padding: 10,\n          marginTop: 10\n        },\n        placeholder: \"Question\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            question: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'gray',\n          borderRadius: 5,\n          padding: 10,\n          marginTop: 10\n        },\n        placeholder: \"Answer\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            answer: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end',\n          paddingBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.addCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          marginVertical: 10,\n          backgroundColor: 'blue',\n          borderRadius: 5,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 14,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, \"Add to Deck\")))));\n    }\n  }]);\n\n  return AddCard;\n}(React.Component);\n\nexport default connect()(AddCard);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-mobile-flashcard-app/components/AddCard.js"],"names":["React","connect","handleAddFlashcard","AddCard","state","question","answer","addCard","deck","props","navigation","params","trim","alert","dispatch","id","goBack","flex","paddingHorizontal","paddingVertical","borderWidth","borderColor","borderRadius","padding","marginTop","text","setState","justifyContent","paddingBottom","marginVertical","backgroundColor","color","textAlign","fontSize","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, FlatList, TouchableOpacity, TextInput } from 'react-native'\nimport { connect } from 'react-redux'\nimport { handleAddFlashcard } from '../actions/decks'\n\nclass AddCard extends React.Component {\n    state = {\n        question: '',\n        answer: ''\n    }\n    addCard = () => {\n        let { question, answer } = this.state;\n        const { deck } = this.props.navigation.state.params;\n\n        question = question.trim();\n        answer = answer.trim()\n        if (!question || !answer) {\n            alert('You must provide a question and an answer.');\n            return;\n        }\n        this.props.dispatch(handleAddFlashcard(deck.id, question, answer));\n        this.props.navigation.goBack();\n    }\n\n\n    render() {\n        const { deck } = this.props.navigation.state.params;\n        \n        return (\n            <View style={{flex: 1, paddingHorizontal: 50}}>\n                <View style={{paddingVertical: 10}}>\n                    <TextInput \n                        style={{borderWidth: 1, borderColor: 'gray', borderRadius: 5, padding: 10, marginTop: 10}} \n                        placeholder=\"Question\" \n                        onChangeText={text => this.setState({question: text})} />\n                    <TextInput \n                        style={{borderWidth: 1, borderColor: 'gray', borderRadius: 5, padding: 10, marginTop: 10}} \n                        placeholder=\"Answer\" \n                        onChangeText={text => this.setState({answer: text})} />\n                </View>\n                <View style={{flex: 1, justifyContent: 'flex-end', paddingBottom: 100}}>\n                    <TouchableOpacity onPress={this.addCard}>\n                        <View style={{ marginVertical: 10, backgroundColor: 'blue', borderRadius: 5, padding: 10}}>\n                            <Text style={{color: 'white', textAlign: 'center', fontSize: 14, fontWeight: 'bold'}}>Add to Deck</Text>\n                        </View>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n}\n\nexport default connect()(AddCard)"]},"metadata":{},"sourceType":"module"}